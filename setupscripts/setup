#!/bin/sh

# define functions and check if calling setup correctly
if [ -f ./setupscripts/setup_functions.sh ]
then
  # load setup functions
  . ./setupscripts/setup_functions.sh
else 
  # check if we are in the right directory
  if [ "$0" != "./setupscripts/setup" ]
  then
    echo "Please navigate to the root dotfiles directory and run ./setupscripts/setup"
    exit 1
  fi
fi

# don't run as root, will install programs in root user directory
if [ "$(whoami)" = "root" ]
then
    echo "Please do not run as root!"
    exit 1
fi

# WARN users of sudo access
echo "WARNING You may need root permissions to run some aspects of this program, procede with caution."
sleep 3

# parse user input
if [ "$1" = "preset" ]
then
  case $2 in
    # run for main machine
    main)
      validate_package_manager $3

      if [ $? -ne "0" ]
      then
        echo "Could not match package manager, skipping appliction install..."
        sleep 2
      else
        install_apps $3
      fi

      setup_bash
      setup_git
      setup_vim_plug # need for vim plugins
      setup_vimrc
      ;;

    # install docker for servers and run basic setup stuff
    server)
      validate_package_manager $3

      if [ $? -ne "0" ]
      then
        echo "Could not match package manager skipping application install..."
        sleep 2
      else
        sudo $3 install docker
      fi

      # symlink all my config files for bash git and vim
      setup_bash
      setup_git
      vim_basic_setup
      ;;

    # just symlink the bashrc, gitconfig, and basic vimrc
    bare)
      setup_bash
      setup_git
      vim_basic_setup
      ;;

    help)
      echo "help"
      ;;

    *)
      echo "Not a valid preset. Choose from [main, server, bare]"
  esac

elif [ "$1" = "help" ]
then
  help_command

else
  # run specific options instead of presets
  for option in $@
  do
    case $option in
      # install main apps
      apps)
        shift
        validate_package_manager $1
        if [ $? -ne "0" ]
        then
          echo "Could not match package manager skipping application install..."
        sleep 2
        else
          install_apps $1
        fi
        ;;

      # setup bash
      bash)
        setup_bash
        ;;

      # setup git
      git)
        setup_git
        ;;

      # setup vim
      vim)
        setup_vimrc
        ;;

      # setup vim plug
      vim-plug)
        setup_vim_plug
        ;;

      # download dracula vim
      dracula-vim)
        dracula_vim_install
        ;;

      # setup vim basic config
      vimb)
        vim_basic_setup
        ;;

      # install nvchad
      nvchad)
        install_nvchad
        setup_nvchad
        ;;

      *)
        echo "$option is not a valid option."
        ;;
    esac
  done
  shift # because of the need for package manager specification
fi

echo "Setup complete."

