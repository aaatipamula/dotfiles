#!/bin/bash

# Load setup functions
if [ -f "./setupscripts/setup_functions.sh" ]; then
  . ./setupscripts/setup_functions.sh
elif [ "$0" != "./setupscripts/setup" ]; then
  error "Please navigate to the root dotfiles directory and run ./setupscripts/setup"
  exit 1
fi

# Don't run as root, will install programs in root user directory
if [ "$(whoami)" = "root" ]
then
  error "Please do not run as root!"
  exit 1
fi

echo "WARNING You may need root permissions to run some aspects of this program, procede with caution."
sleep 1

# Parse user input
if [ "$1" = "preset" ]; then
  case $2 in
    main)
      setup_apps $3
      for prog in ${CONFIG_PROGRAMS[@]}; do
        eval setup_$prog
      done
      ;;

    progs)
      for prog in ${CONFIG_PROGRAMS[@]}; do
        eval "setup_$prog"
      done
      ;;

    bare)
      setup_bash
      setup_git
      setup_vim
      ;;

    *)
      warn "Not a valid preset. Choose from [main, progs, bare]"
      help_command
      ;;
  esac

elif [[ "$1" = "help" || -z "$1" ]]; then
  help_command

else
  # run specific options instead of presets
  for option in $@; do
    if [[ " ${CONFIG_PROGRAMS[@]} " =~ " ${option} " ]]; then
      eval "setup_$option"
    elif [ "$option" = "apps" ]; then
      shift
      setup_apps $1
    else
      echo "WARN: $option is not a valid option, skipping."
    fi
  done
  shift # because of the need for package manager specification
fi

echo "Setup complete."

